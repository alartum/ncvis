parameters:
  - name: pythonVersions
    type: object
    default: []

jobs:
- job:
  strategy:
    matrix:
      ${{ each pythonVersion in parameters.pythonVersions }}:
        Windows Python ${{ pythonVersion }}:
          imageName: 'windows-latest'
          # imageName: 'vs2017-win2016'
          python.version: ${{ pythonVersion }}

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    submodules: true

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      rename "Program Files (x86)\Windows Kits\10\include\wdf" "10.0"      
    displayName: Fix SDK names

  - script: | 
      conda config --set always_yes yes --set anaconda_upload no
      conda update -q conda
      conda create -n test python=$(python.version) conda-build conda-verify
    displayName: Create environment

  - script: |
      call activate test
      conda-build --no-test .
      for /f %%i in ('conda build . --output') do set CONDA_PKG=%%i
      echo "##vso[task.setvariable variable=CONDA_PKG]%CONDA_PKG%"
    displayName: Build
  
  - script: |
      call activate test
      conda-build -t %CONDA_PKG%
    displayName: Test

  # - script: |
  #     source activate test
  #     conda install anaconda-client
  #     anaconda -t $(Conda Token) upload $CONDA_PKG --force
  #   condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  #   displayName: Upload to Anaconda

  # - script: |
  #     source activate test
  #     conda install numpy cython twine
  #     python setup.py sdist
  #     twine upload -u '__token__' -p $(PyPI Token) dist/*
  #   condition: and(eq(variables['shortName'], variables['selectedName']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  #   displayName: Upload to PyPI