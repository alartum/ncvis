parameters:
  - name: platforms
    type: object
    default: []
  - name: pythonVersions
    type: object
    default: []
  - name: uploadSrc
    type: object
    default: 'Linux3.7'

jobs:
  - job:
    strategy:
      matrix:
        ${{ each platform in parameters.platforms }}:
          ${{ each pythonVersion in parameters.pythonVersions }}:
            ${{ platform.name }} Python ${{ pythonVersion }}:
              pool: ${{ platform.image }}
              python.version: ${{ pythonVersion }}
              shortName: ${{ platform.name }}${{ pythonVersion }}
              selectedName: ${{ parameters.uploadSrc }}
    steps:
    - script: git submodule update --init --recursive
      displayName: Download submodules

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH

    - script: | 
        conda config --set always_yes yes --set anaconda_upload no
        conda update -q conda
        conda create -n test python=$(python.version) conda-build conda-verify
      displayName: Create environment

    # - script: |
    #     source activate test
    #     conda-build --no-test .
    #     CONDA_PKG=$(conda-build --output .)
    #     echo "##vso[task.setvariable variable=CONDA_PKG]$CONDA_PKG"
    #   displayName: Build
    
    # - script: |
    #     source activate test
    #     conda-build -t $CONDA_PKG
    #   displayName: Test

    # - script: |
    #     echo 'Uploading to Anaconda'
    #     # source activate test
    #     # conda install anaconda-client
    #     # anaconda -t conda_token.txt upload $CONDA_PKG --force
    #   condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
    #   displayName: Upload to Anaconda

    - script: |
        echo 'Uploading to PyPI'
        # source activate test
        # conda install numpy cython twine
        # python setup.py sdist
        # twine upload -u '__token__' -p $PYPI_UPLOAD_TOKEN dist/*
      condition: and(eq(variables['shortName'], variables['selectedName']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: Upload to PyPI